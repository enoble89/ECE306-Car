###############################################################################
#
# IAR C/C++ Compiler V6.40.1.950/W32 for MSP430           17/Feb/2016  18:20:57
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.40
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\Evan Noble\Desktop\ECE306 Car\motors.c
#    Command line  =  
#        "C:\Users\Evan Noble\Desktop\ECE306 Car\motors.c" -lC "C:\Users\Evan
#        Noble\Desktop\ECE306 Car\Debug\List" -o "C:\Users\Evan
#        Noble\Desktop\ECE306 Car\Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --debug -D__MSP430FR5739__ -e --double=32
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\430\lib\dlib\dl430xlsfn.h" --core=430X --data_model=small -On
#        --multiplier=32 --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        C:\Users\Evan Noble\Desktop\ECE306 Car\Debug\List\motors.lst
#    Object file   =  
#        C:\Users\Evan Noble\Desktop\ECE306 Car\Debug\Obj\motors.r43
#
###############################################################################

C:\Users\Evan Noble\Desktop\ECE306 Car\motors.c
      1          //------------------------------------------------------------------------------
      2          //  File Name : motors.c
      3          //
      4          //  Description: This file contains the functions for motot control
      5          //
      6          //  Evan Noble
      7          //  Feb 2016
      8          //  Built with IAR Embedded Workbench Version: V7.3.1.3987 (6.40.1)
      9          //------------------------------------------------------------------------------
     10          
     11          #include "macros.h"
     12          #include "globals.h"
     13          #include "msp430.h"

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2
     14          
     15          
     16          //------------------------------------------------------------------------------
     17          // Function Name: RightMotorForward
     18          //
     19          // Description: turns motor on in the forward direction
     20          //
     21          // Passed: none
     22          // Locals: none
     23          // Returned: none
     24          // Globals: none
     25          //
     26          // Evan Noble
     27          // Jan 2016
     28          // Built with IAR Embedded Workbench Version: V7.3.1.3987 (6.40.1)
     29          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     30          void RightMotorForward(void) {
   \                     RightMotorForward:
     31            P3OUT |= R_FORWARD;
   \   000000   F2D010002202 BIS.B   #0x10, &0x222
     32          }
   \   000006   1001         RETA
   \   000008                REQUIRE _A_PBOUT_L
     33          //------------------------------------------------------------------------------
     34          // Function Name: RightMotorForward
     35          //
     36          // Description: turns motor on in the forward direction
     37          //
     38          // Passed: none
     39          // Locals: none
     40          // Returned: none
     41          // Globals: none
     42          //
     43          // Evan Noble
     44          // Jan 2016
     45          // Built with IAR Embedded Workbench Version: V7.3.1.3987 (6.40.1)
     46          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     47          void LeftMotorForward(void) {
   \                     LeftMotorForward:
     48            P3OUT |= L_FORWARD;
   \   000000   F2D040002202 BIS.B   #0x40, &0x222
     49          }
   \   000006   1001         RETA
   \   000008                REQUIRE _A_PBOUT_L
     50          //------------------------------------------------------------------------------
     51          // Function Name: RightMotorForward
     52          //
     53          // Description: turns motor on in the forward direction
     54          //
     55          // Passed: none
     56          // Locals: none
     57          // Returned: none
     58          // Globals: none
     59          //
     60          // Evan Noble
     61          // Jan 2016
     62          // Built with IAR Embedded Workbench Version: V7.3.1.3987 (6.40.1)
     63          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     64          void RightMotorOff(void) {
   \                     RightMotorOff:
     65            P3OUT &= ~R_FORWARD;
   \   000000   F2C010002202 BIC.B   #0x10, &0x222
     66          }
   \   000006   1001         RETA
   \   000008                REQUIRE _A_PBOUT_L
     67          //------------------------------------------------------------------------------
     68          // Function Name: RightMotorForward
     69          //
     70          // Description: turns motor on in the forward direction
     71          //
     72          // Passed: none
     73          // Locals: none
     74          // Returned: none
     75          // Globals: none
     76          //
     77          // Evan Noble
     78          // Jan 2016
     79          // Built with IAR Embedded Workbench Version: V7.3.1.3987 (6.40.1)
     80          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     81          void LeftMotorOff(void) {
   \                     LeftMotorOff:
     82            P3OUT &= ~L_FORWARD;
   \   000000   F2C040002202 BIC.B   #0x40, &0x222
     83          }
   \   000006   1001         RETA
   \   000008                REQUIRE _A_PBOUT_L
     84          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   LeftMotorForward
      4   LeftMotorOff
      4   RightMotorForward
      4   RightMotorOff


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       8  LeftMotorForward
       8  LeftMotorOff
       8  RightMotorForward
       8  RightMotorOff
       2  _A_PBOUT_L

 
 32 bytes in segment CODE
  2 bytes in segment DATA16_AN
 
 32 bytes of CODE memory
  0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: none
